/*
 * crc.h
 *
 * Code generated by universal_crc by Danjel McGougan
 *
 * CRC parameters used:
 *   bits:       7
 *   poly:       0x45
 *   init:       0x00
 *   xor:        0x00
 *   reverse:    false
 *   non-direct: false
 *
 * CRC of the string "123456789" is 0x61
 */

#ifndef CRC_H_
#define CRC_H_

#include "gwTypes.h"

gwUINT8 crc_calc(const gwUINT8 *data, gwUINT8 len);

extern const gwUINT8 crc_table[1024];

static inline gwUINT8 crc_init(void)
{
	return 0;
}

/*static inline */ gwUINT8 crc_next(gwUINT8 crc, gwUINT8 data)
{
	return crc_table[crc ^ data];
}

/*
 * Process 4 bytes in one go
 */
static inline gwUINT8 crc_next4(gwUINT8 crc, gwUINT8 d0, gwUINT8 d1, gwUINT8 d2, gwUINT8 d3)
{
	crc =
		crc_table[d3] ^
		crc_table[d2 + 0x100] ^
		crc_table[d1 + 0x200] ^
		crc_table[((crc & 0xff) ^ d0) + 0x300];
	return crc;
}

static inline gwUINT8 crc_final(gwUINT8 crc)
{
	return (crc >> 1);
}

#endif
